using UnityEngine;
using UnityEditor;
using UnityEngine.XR.ARFoundation;
using UnityEngine.XR.ARSubsystems;

#if UNITY_EDITOR

/// <summary>
/// –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞ –¥–ª—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å Flutter
/// </summary>
public class AutoSetup : EditorWindow
{
    [MenuItem("Flutter/Auto Setup Project")]
    public static void ShowWindow()
    {
        GetWindow<AutoSetup>("Flutter Auto Setup");
    }

    [MenuItem("Flutter/Quick Setup", false, 1)]
    public static void QuickSetup()
    {
        if (EditorUtility.DisplayDialog(
            "–ë—ã—Å—Ç—Ä–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞",
            "–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –ø—Ä–æ–µ–∫—Ç –¥–ª—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å Flutter?",
            "–î–∞", "–û—Ç–º–µ–Ω–∞"))
        {
            PerformQuickSetup();
        }
    }

    private void OnGUI()
    {
        GUILayout.Label("Flutter Unity Auto Setup", EditorStyles.boldLabel);
        EditorGUILayout.Space();

        EditorGUILayout.HelpBox(
            "–≠—Ç–æ—Ç –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –Ω–∞—Å—Ç—Ä–æ–∏—Ç –≤–∞—à Unity –ø—Ä–æ–µ–∫—Ç –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å Flutter.",
            MessageType.Info
        );

        EditorGUILayout.Space();

        if (GUILayout.Button("–í—ã–ø–æ–ª–Ω–∏—Ç—å –ø–æ–ª–Ω—É—é –Ω–∞—Å—Ç—Ä–æ–π–∫—É"))
        {
            PerformFullSetup();
        }

        EditorGUILayout.Space();

        GUILayout.Label("–û—Ç–¥–µ–ª—å–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è:", EditorStyles.boldLabel);

        if (GUILayout.Button("1. –°–æ–∑–¥–∞—Ç—å FlutterUnityManager –Ω–∞ —Å—Ü–µ–Ω–µ"))
        {
            CreateFlutterUnityManager();
        }

        if (GUILayout.Button("2. –ù–∞—Å—Ç—Ä–æ–∏—Ç—å —Å—Å—ã–ª–∫–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤"))
        {
            SetupComponentReferences();
        }

        if (GUILayout.Button("3. –ù–∞—Å—Ç—Ä–æ–∏—Ç—å Build Settings"))
        {
            SetupBuildSettings();
        }

        if (GUILayout.Button("4. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏"))
        {
            CheckDependencies();
        }

        EditorGUILayout.Space();

        EditorGUILayout.HelpBox(
            "–ü–æ—Å–ª–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ Flutter ‚Üí Build Settings –¥–ª—è —Å–±–æ—Ä–∫–∏ –ø—Ä–æ–µ–∫—Ç–∞.",
            MessageType.Info
        );
    }

    private static void PerformQuickSetup()
    {
        Debug.Log("üöÄ –ù–∞—á–∏–Ω–∞–µ–º –±—ã—Å—Ç—Ä—É—é –Ω–∞—Å—Ç—Ä–æ–π–∫—É –ø—Ä–æ–µ–∫—Ç–∞...");

        CreateFlutterUnityManager();
        SetupComponentReferences();
        SetupBuildSettings();
        CheckDependencies();

        Debug.Log("‚úÖ –ë—ã—Å—Ç—Ä–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!");
        EditorUtility.DisplayDialog("–ì–æ—Ç–æ–≤–æ", "–ü—Ä–æ–µ–∫—Ç –Ω–∞—Å—Ç—Ä–æ–µ–Ω –¥–ª—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å Flutter!", "OK");
    }

    private static void PerformFullSetup()
    {
        Debug.Log("üîß –í—ã–ø–æ–ª–Ω—è–µ–º –ø–æ–ª–Ω—É—é –Ω–∞—Å—Ç—Ä–æ–π–∫—É –ø—Ä–æ–µ–∫—Ç–∞...");

        // –í—ã–ø–æ–ª–Ω—è–µ–º –≤—Å–µ —ç—Ç–∞–ø—ã –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
        CreateFlutterUnityManager();
        SetupComponentReferences();
        SetupBuildSettings();
        CheckDependencies();
        SetupOptionalComponents();

        Debug.Log("üéØ –ü–æ–ª–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!");
        EditorUtility.DisplayDialog("–ì–æ—Ç–æ–≤–æ", "–ü—Ä–æ–µ–∫—Ç –ø–æ–ª–Ω–æ—Å—Ç—å—é –Ω–∞—Å—Ç—Ä–æ–µ–Ω –¥–ª—è Flutter!", "OK");
    }

    private static void CreateFlutterUnityManager()
    {
        Debug.Log("üìã –°–æ–∑–¥–∞–µ–º FlutterUnityManager...");

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ FlutterUnityManager –Ω–∞ —Å—Ü–µ–Ω–µ
        FlutterUnityManager existing = FindObjectOfType<FlutterUnityManager>();
        if (existing != null)
        {
            Debug.Log("‚ÑπÔ∏è FlutterUnityManager —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –Ω–∞ —Å—Ü–µ–Ω–µ");
            return;
        }

        // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π GameObject —Å FlutterUnityManager
        GameObject managerObject = new GameObject("FlutterUnityManager");
        FlutterUnityManager manager = managerObject.AddComponent<FlutterUnityManager>();

        // –ü–æ–º–µ—á–∞–µ–º –∫–∞–∫ –Ω–µ —É–Ω–∏—á—Ç–æ–∂–∞–µ–º—ã–π –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ü–µ–Ω—ã
        managerObject.transform.SetAsFirstSibling();

        Debug.Log("‚úÖ FlutterUnityManager —Å–æ–∑–¥–∞–Ω");
    }

    private static void SetupComponentReferences()
    {
        Debug.Log("üîó –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º —Å—Å—ã–ª–∫–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤...");

        FlutterUnityManager manager = FindObjectOfType<FlutterUnityManager>();
        if (manager == null)
        {
            Debug.LogError("‚ùå FlutterUnityManager –Ω–µ –Ω–∞–π–¥–µ–Ω! –°–æ–∑–¥–∞–π—Ç–µ –µ–≥–æ —Å–Ω–∞—á–∞–ª–∞.");
            return;
        }

        // –ù–∞—Ö–æ–¥–∏–º –∏ –Ω–∞–∑–Ω–∞—á–∞–µ–º AsyncSegmentationManager
        AsyncSegmentationManager segmentationManager = FindObjectOfType<AsyncSegmentationManager>();
        if (segmentationManager != null)
        {
            // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ä–µ—Ñ–ª–µ–∫—Å–∏—é –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –ø—Ä–∏–≤–∞—Ç–Ω—ã—Ö –ø–æ–ª–µ–π
            var field = typeof(FlutterUnityManager).GetField("segmentationManager",
                System.Reflection.BindingFlags.NonPublic | System.Reflection.BindingFlags.Instance);
            if (field != null)
            {
                field.SetValue(manager, segmentationManager);
                Debug.Log("‚úÖ AsyncSegmentationManager –Ω–∞–∑–Ω–∞—á–µ–Ω");
            }
        }
        else
        {
            Debug.LogWarning("‚ö†Ô∏è AsyncSegmentationManager –Ω–µ –Ω–∞–π–¥–µ–Ω –Ω–∞ —Å—Ü–µ–Ω–µ");
        }

        // –ù–∞—Ö–æ–¥–∏–º –∏ –Ω–∞–∑–Ω–∞—á–∞–µ–º ColorPaletteManager
        ColorPaletteManager colorManager = FindObjectOfType<ColorPaletteManager>();
        if (colorManager != null)
        {
            var field = typeof(FlutterUnityManager).GetField("colorPaletteManager",
                System.Reflection.BindingFlags.NonPublic | System.Reflection.BindingFlags.Instance);
            if (field != null)
            {
                field.SetValue(manager, colorManager);
                Debug.Log("‚úÖ ColorPaletteManager –Ω–∞–∑–Ω–∞—á–µ–Ω");
            }
        }
        else
        {
            Debug.LogWarning("‚ö†Ô∏è ColorPaletteManager –Ω–µ –Ω–∞–π–¥–µ–Ω –Ω–∞ —Å—Ü–µ–Ω–µ");
        }

        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è
        EditorUtility.SetDirty(manager);
    }

    private static void SetupBuildSettings()
    {
        Debug.Log("‚öôÔ∏è –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º Build Settings...");

        // –û—Å–Ω–æ–≤–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–ª–µ–µ—Ä–∞
        PlayerSettings.companyName = "YourCompany";
        PlayerSettings.productName = "RemaluxAR";

        // –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è Android
        PlayerSettings.Android.targetArchitectures = AndroidArchitecture.ARM64 | AndroidArchitecture.ARMv7;
        PlayerSettings.SetScriptingBackend(BuildTargetGroup.Android, ScriptingImplementation.IL2CPP);
        PlayerSettings.Android.minSdkVersion = AndroidSdkVersions.AndroidApiLevel24;

        // –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è —ç–∫—Å–ø–æ—Ä—Ç–∞
        EditorUserBuildSettings.exportAsGoogleAndroidProject = true;
        EditorUserBuildSettings.androidBuildSystem = AndroidBuildSystem.Gradle;

        Debug.Log("‚úÖ Build Settings –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã");
    }

    private static void CheckDependencies()
    {
        Debug.Log("üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏...");

        bool allGood = true;

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ AR Foundation
        if (FindObjectOfType<ARCameraManager>() == null)
        {
            Debug.LogWarning("‚ö†Ô∏è ARCameraManager –Ω–µ –Ω–∞–π–¥–µ–Ω. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ AR Foundation –Ω–∞—Å—Ç—Ä–æ–µ–Ω –ø—Ä–∞–≤–∏–ª—å–Ω–æ.");
            allGood = false;
        }

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –æ—Å–Ω–æ–≤–Ω—ã—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
        if (FindObjectOfType<AsyncSegmentationManager>() == null)
        {
            Debug.LogWarning("‚ö†Ô∏è AsyncSegmentationManager –Ω–µ –Ω–∞–π–¥–µ–Ω –Ω–∞ —Å—Ü–µ–Ω–µ");
            allGood = false;
        }

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ Unity –≤–µ—Ä—Å–∏–∏ —Å–æ–≤–º–µ—Å—Ç–∏–º–∞
        string unityVersion = Application.unityVersion;
        if (string.Compare(unityVersion, "2022.3") < 0)
        {
            Debug.LogWarning($"‚ö†Ô∏è –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è Unity 2022.3 –∏–ª–∏ –≤—ã—à–µ. –¢–µ–∫—É—â–∞—è –≤–µ—Ä—Å–∏—è: {unityVersion}");
        }

        if (allGood)
        {
            Debug.Log("‚úÖ –í—Å–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –≤ –ø–æ—Ä—è–¥–∫–µ");
        }
        else
        {
            Debug.Log("‚ö†Ô∏è –ù–∞–π–¥–µ–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã —Å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—è–º–∏. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è –≤—ã—à–µ.");
        }
    }

    private static void SetupOptionalComponents()
    {
        Debug.Log("üîß –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã...");

        // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ UnityMessageBridge –¥–ª—è –æ–±—Ä–∞—Ç–Ω–æ–π —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
        UnityMessageBridge bridge = FindObjectOfType<UnityMessageBridge>();
        if (bridge != null)
        {
            // –í–∫–ª—é—á–∞–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –º–µ–Ω–µ–¥–∂–µ—Ä–∞
            var field = typeof(UnityMessageBridge).GetField("useFlutterUnityManager");
            if (field != null)
            {
                field.SetValue(bridge, true);
                EditorUtility.SetDirty(bridge);
                Debug.Log("‚úÖ UnityMessageBridge –Ω–∞—Å—Ç—Ä–æ–µ–Ω –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è FlutterUnityManager");
            }
        }

        // –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫–∏ –¥–ª—è —ç–∫—Å–ø–æ—Ä—Ç–∞, –µ—Å–ª–∏ –∏—Ö –Ω–µ—Ç
        string exportPath = "Builds/Flutter";
        if (!System.IO.Directory.Exists(exportPath))
        {
            System.IO.Directory.CreateDirectory(exportPath);
            Debug.Log($"üìÅ –°–æ–∑–¥–∞–Ω–∞ –ø–∞–ø–∫–∞ –¥–ª—è —ç–∫—Å–ø–æ—Ä—Ç–∞: {exportPath}");
        }
    }

    [MenuItem("Flutter/Documentation", false, 100)]
    public static void OpenDocumentation()
    {
        string readmePath = "Assets/FlutterUnityIntegration/flutter_integration_guide.md";
        if (System.IO.File.Exists(readmePath))
        {
            Application.OpenURL(readmePath);
        }
        else
        {
            EditorUtility.DisplayDialog("–î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è",
                "–î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ Assets/FlutterUnityIntegration/flutter_integration_guide.md", "OK");
        }
    }

    [MenuItem("Flutter/Open Integration Guide", false, 101)]
    public static void OpenIntegrationGuide()
    {
        string guidePath = "Assets/FlutterUnityIntegration/integration_to_existing_flutter.md";
        if (System.IO.File.Exists(guidePath))
        {
            Application.OpenURL(guidePath);
        }
        else
        {
            EditorUtility.DisplayDialog("–†—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ",
                "–†—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ –ø–æ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ: " + guidePath, "OK");
        }
    }
}

#endif