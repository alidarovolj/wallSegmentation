using UnityEngine;
using UnityEngine.Rendering;
using UnityEngine.XR.ARFoundation;

/// <summary>
/// –≠—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω—ã–π –∑–∞—Ö–≤–∞—Ç –≤–∏–¥–µ–æ–ø–æ—Ç–æ–∫–∞ —Å AR-–∫–∞–º–µ—Ä—ã –¥–ª—è –ø–µ—Ä–µ–¥–∞—á–∏ –≤ —à–µ–π–¥–µ—Ä—ã –ø–æ–∫—Ä–∞—Å–∫–∏
/// –†–µ–∞–ª–∏–∑—É–µ—Ç GPU-—Ü–µ–Ω—Ç—Ä–∏—á–Ω—ã–π –ø–æ–¥—Ö–æ–¥ —á–µ—Ä–µ–∑ CommandBuffer –±–µ–∑ –¥–æ—Ä–æ–≥–æ—Å—Ç–æ—è—â–∏—Ö –æ–ø–µ—Ä–∞—Ü–∏–π CPU
/// </summary>
[RequireComponent(typeof(ARCameraManager), typeof(ARCameraBackground))]
public class CameraFeedCapture : MonoBehaviour
{
      [Header("Camera Components")]
      public ARCameraManager cameraManager;
      public ARCameraBackground cameraBackground;

      [Header("Output")]
      private RenderTexture cameraFeedTexture;
      private CommandBuffer blitCommandBuffer;

      public RenderTexture CameraFeedTexture => cameraFeedTexture;

      void Awake()
      {
            // Auto-assign if not set
            if (cameraManager == null)
                  cameraManager = GetComponent<ARCameraManager>();
            if (cameraBackground == null)
                  cameraBackground = GetComponent<ARCameraBackground>();
      }

      void Start()
      {
            InitializeCameraFeedTexture();
      }

      void OnEnable()
      {
            if (cameraManager != null)
            {
                  cameraManager.frameReceived += OnCameraFrameReceived;
                  Debug.Log("üì∏ CameraFeedCapture: GPU-—Ü–µ–Ω—Ç—Ä–∏—á–Ω—ã–π –∑–∞—Ö–≤–∞—Ç –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω");
            }
      }

      void OnDisable()
      {
            if (cameraManager != null)
            {
                  cameraManager.frameReceived -= OnCameraFrameReceived;
            }
      }

      private void InitializeCameraFeedTexture()
      {
            // –°–æ–∑–¥–∞–µ–º –ø–æ—Å—Ç–æ—è–Ω–Ω—É—é RenderTexture –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –≤–∏–¥–µ–æ–ø–æ—Ç–æ–∫–∞
            cameraFeedTexture = new RenderTexture(Screen.width, Screen.height, 0, RenderTextureFormat.Default);
            cameraFeedTexture.name = "AR_CameraFeed";
            cameraFeedTexture.Create();

            Debug.Log($"‚úÖ CameraFeedTexture —Å–æ–∑–¥–∞–Ω–∞: {Screen.width}x{Screen.height}");
      }

      private void OnCameraFrameReceived(ARCameraFrameEventArgs eventArgs)
      {
            if (cameraBackground == null || cameraFeedTexture == null) return;

            // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—Å—Ç—É—Ä—É –∏–∑ –º–∞—Ç–µ—Ä–∏–∞–ª–∞ ARCameraBackground –±–µ–∑–æ–ø–∞—Å–Ω–æ
            if (cameraBackground.material == null) return;

            var cameraTexture = cameraBackground.material.HasProperty("_MainTex")
                ? cameraBackground.material.GetTexture("_MainTex")
                : null;
            if (cameraTexture == null) return;

            // –°–æ–∑–¥–∞–µ–º CommandBuffer –æ–¥–∏–Ω —Ä–∞–∑ –¥–ª—è —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
            if (blitCommandBuffer == null)
            {
                  blitCommandBuffer = new CommandBuffer();
                  blitCommandBuffer.name = "AR Camera Feed Blit";
            }
            else
            {
                  blitCommandBuffer.Clear();
            }

            // –ö–æ–ø–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç—É—Ä—É –∫–∞–º–µ—Ä—ã –≤ –Ω–∞—à—É –ø–æ—Å—Ç–æ—è–Ω–Ω—É—é RenderTexture
            blitCommandBuffer.Blit(cameraTexture, cameraFeedTexture);
            Graphics.ExecuteCommandBuffer(blitCommandBuffer);

            // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–∞–∫ –≥–ª–æ–±–∞–ª—å–Ω—É—é —Ç–µ–∫—Å—Ç—É—Ä—É –¥–ª—è –≤—Å–µ—Ö —à–µ–π–¥–µ—Ä–æ–≤
            Shader.SetGlobalTexture("_GlobalCameraFeedTex", cameraFeedTexture);

            // –¢–∞–∫–∂–µ –ø–µ—Ä–µ–¥–∞–µ–º –º–∞—Ç—Ä–∏—Ü—É —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü–∏–∏ –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ UV-–º–∞–ø–ø–∏–Ω–≥–∞
            // Note: displayTransform —É–¥–∞–ª–µ–Ω –≤ –Ω–æ–≤—ã—Ö –≤–µ—Ä—Å–∏—è—Ö AR Foundation
            Shader.SetGlobalMatrix("_UnityDisplayTransform", Matrix4x4.identity);
      }

      void OnDestroy()
      {
            if (cameraFeedTexture != null)
            {
                  cameraFeedTexture.Release();
                  cameraFeedTexture = null;
            }

            if (blitCommandBuffer != null)
            {
                  blitCommandBuffer.Dispose();
                  blitCommandBuffer = null;
            }

            Debug.Log("üßπ CameraFeedCapture: —Ä–µ—Å—É—Ä—Å—ã –æ—Å–≤–æ–±–æ–∂–¥–µ–Ω—ã");
      }
}