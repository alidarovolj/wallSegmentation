using UnityEngine;

// –°–æ–∑–¥–∞—Ç—å GameObject "PerformanceOptimizationSuite" –∏ –¥–æ–±–∞–≤–∏—Ç—å —ç—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç
public class PerformanceOptimizationSuite : MonoBehaviour
{
    [Header("Optimization Components")]
    public QuickDiagnostics diagnostics;
    public InstantPerformanceMonitor monitor;

    [Header("Info")]
    [TextArea(3, 5)]
    public string info = "CriticalPerformanceFix —É–¥–∞–ª–µ–Ω - GPU backend —É–∂–µ –≤—Å—Ç—Ä–æ–µ–Ω –≤ SegmentationManager —Å Sentis 2.0";

    [ContextMenu("Initialize Full Suite")]
    void InitializeOptimizationSuite()
    {
        if (GetComponent<QuickDiagnostics>() == null)
            gameObject.AddComponent<QuickDiagnostics>();
        if (GetComponent<InstantPerformanceMonitor>() == null)
            gameObject.AddComponent<InstantPerformanceMonitor>();

        diagnostics = GetComponent<QuickDiagnostics>();
        monitor = GetComponent<InstantPerformanceMonitor>();

        Debug.Log("üéØ Performance Optimization Suite initialized!");
        Debug.Log("‚úÖ GPU backend —É–∂–µ –≤—Å—Ç—Ä–æ–µ–Ω –≤ SegmentationManager (Sentis 2.0)");
        Debug.Log("Press F1 for real-time monitor, F2 for diagnostics");
    }

    void Start()
    {
        // Automatically initialize if components are not assigned
        if (diagnostics == null || monitor == null)
        {
            InitializeOptimizationSuite();
        }
        Debug.Log("üöÄ remaluxAR Performance Optimization Suite ready!");
        Debug.Log("üîß Run 'Initialize Full Suite' from context menu to begin");
    }
}